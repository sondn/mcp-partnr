/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../common";
import type { Package, PackageInterface } from "../../contracts/Package";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AddressInsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "ECDSAInvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "ECDSAInvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "ECDSAInvalidSignatureS",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "CreatedPackage",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "_tokenURIs",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "callback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_tokenUri",
        type: "string",
      },
    ],
    name: "createPackage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "createdIds",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_hash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_signature",
        type: "bytes",
      },
    ],
    name: "isValidSignature",
    outputs: [
      {
        internalType: "bytes4",
        name: "magicValue",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "rescueFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "updateTokenUri",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001356380380620013568339810160408190526200003491620001c3565b33806200005b57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6200006681620000ae565b506001620000758482620002df565b506002620000848382620002df565b50600380546001600160a01b0319166001600160a01b039290921691909117905550620003ab9050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200012657600080fd5b81516001600160401b0380821115620001435762000143620000fe565b604051601f8301601f19908116603f011681019082821181831017156200016e576200016e620000fe565b816040528381526020925086838588010111156200018b57600080fd5b600091505b83821015620001af578582018301518183018401529082019062000190565b600093810190920192909252949350505050565b600080600060608486031215620001d957600080fd5b83516001600160401b0380821115620001f157600080fd5b620001ff8783880162000114565b945060208601519150808211156200021657600080fd5b50620002258682870162000114565b604086015190935090506001600160a01b03811681146200024557600080fd5b809150509250925092565b600181811c908216806200026557607f821691505b6020821081036200028657634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002da57600081815260208120601f850160051c81016020861015620002b55750805b601f850160051c820191505b81811015620002d657828155600101620002c1565b5050505b505050565b81516001600160401b03811115620002fb57620002fb620000fe565b62000313816200030c845462000250565b846200028c565b602080601f8311600181146200034b5760008415620003325750858301515b600019600386901b1c1916600185901b178555620002d6565b600085815260208120601f198616915b828110156200037c578886015182559484019460019091019084016200035b565b50858210156200039b5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610f9b80620003bb6000396000f3fe6080604052600436106100e15760003560e01c806378e3214f1161007f578063c87b56dd11610059578063c87b56dd146102a7578063d31af484146102c7578063e985e9c5146102e7578063f2fde38b1461030757600080fd5b806378e3214f146102295780638da5cb5b14610249578063c7e45ec01461026757600080fd5b806330d93b51116100bb57806330d93b511461019b5780636352211e146101be578063715018a6146101f457806373cf03b61461020957600080fd5b8063081812fc146100ed5780630bb78ec1146101355780631626ba7e1461016257600080fd5b366100e857005b600080fd5b3480156100f957600080fd5b50610118610108366004610b26565b506003546001600160a01b031690565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561014157600080fd5b50610155610150366004610b26565b610327565b60405161012c9190610b63565b34801561016e57600080fd5b5061018261017d366004610c39565b6103c1565b6040516001600160e01b0319909116815260200161012c565b3480156101a757600080fd5b506101bc6101b6366004610c9c565b50505050565b005b3480156101ca57600080fd5b506101186101d9366004610b26565b6000908152600760205260409020546001600160a01b031690565b34801561020057600080fd5b506101bc610425565b34801561021557600080fd5b506101bc610224366004610cfd565b610439565b34801561023557600080fd5b506101bc610244366004610d79565b6104f8565b34801561025557600080fd5b506000546001600160a01b0316610118565b34801561027357600080fd5b50610297610282366004610b26565b60046020526000908152604090205460ff1681565b604051901515815260200161012c565b3480156102b357600080fd5b506101556102c2366004610b26565b610580565b3480156102d357600080fd5b506101bc6102e2366004610cfd565b610622565b3480156102f357600080fd5b50610297610302366004610da3565b610643565b34801561031357600080fd5b506101bc610322366004610dd6565b610680565b6005602052600090815260409020805461034090610df1565b80601f016020809104026020016040519081016040528092919081815260200182805461036c90610df1565b80156103b95780601f1061038e576101008083540402835291602001916103b9565b820191906000526020600020905b81548152906001019060200180831161039c57829003601f168201915b505050505081565b6000806103ce84846106be565b9050806001600160a01b03166103ec6000546001600160a01b031690565b6001600160a01b03161461041357604051638baa579f60e01b815260040160405180910390fd5b50630b135d3f60e11b90505b92915050565b61042d6106e8565b6104376000610715565b565b6104416106e8565b60008381526004602052604090205460ff16156104915760405162461bcd60e51b8152602060048201526009602482015268195e1a5cdd1cc81a5960ba1b60448201526064015b60405180910390fd5b6000838152600460209081526040808320805460ff19166001179055600590915290206104bf828483610e79565b506040518381527f9159ec84a2e5c34213510966eddb52340436ecf87602e7af724548cbf0d8e9449060200160405180910390a1505050565b6105006106e8565b6001600160a01b03821661056857604051600090339083908381818185875af1925050503d8060008114610550576040519150601f19603f3d011682016040523d82523d6000602084013e610555565b606091505b505090508061056357600080fd5b505050565b61057c6001600160a01b0383163383610765565b5050565b600081815260056020526040902080546060919061059d90610df1565b80601f01602080910402602001604051908101604052809291908181526020018280546105c990610df1565b80156106165780601f106105eb57610100808354040283529160200191610616565b820191906000526020600020905b8154815290600101906020018083116105f957829003601f168201915b50505050509050919050565b61062a6106e8565b60008381526005602052604090206101b6828483610e79565b60006001600160a01b0383163014801561066a57506003546001600160a01b038381169116145b156106775750600161041f565b50600092915050565b6106886106e8565b6001600160a01b0381166106b257604051631e4fbdf760e01b815260006004820152602401610488565b6106bb81610715565b50565b6000806000806106ce86866107b7565b9250925092506106de8282610804565b5090949350505050565b6000546001600160a01b031633146104375760405163118cdaa760e01b8152336004820152602401610488565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526105639084906108bd565b600080600083516041036107f15760208401516040850151606086015160001a6107e388828585610920565b9550955095505050506107fd565b50508151600091506002905b9250925092565b600082600381111561081857610818610f3a565b03610821575050565b600182600381111561083557610835610f3a565b036108535760405163f645eedf60e01b815260040160405180910390fd5b600282600381111561086757610867610f3a565b036108885760405163fce698f760e01b815260048101829052602401610488565b600382600381111561089c5761089c610f3a565b0361057c576040516335e2f38360e21b815260048101829052602401610488565b60006108d26001600160a01b038416836109ef565b905080516000141580156108f75750808060200190518101906108f59190610f50565b155b1561056357604051635274afe760e01b81526001600160a01b0384166004820152602401610488565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a084111561095b57506000915060039050826109e5565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa1580156109af573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166109db575060009250600191508290506109e5565b9250600091508190505b9450945094915050565b60606109fd83836000610a04565b9392505050565b606081471015610a295760405163cd78605960e01b8152306004820152602401610488565b600080856001600160a01b03168486604051610a459190610f72565b60006040518083038185875af1925050503d8060008114610a82576040519150601f19603f3d011682016040523d82523d6000602084013e610a87565b606091505b5091509150610a97868383610aa1565b9695505050505050565b606082610ab657610ab182610afd565b6109fd565b8151158015610acd57506001600160a01b0384163b155b15610af657604051639996b31560e01b81526001600160a01b0385166004820152602401610488565b50806109fd565b805115610b0d5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b600060208284031215610b3857600080fd5b5035919050565b60005b83811015610b5a578181015183820152602001610b42565b50506000910152565b6020815260008251806020840152610b82816040850160208701610b3f565b601f01601f19169190910160400192915050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610bbd57600080fd5b813567ffffffffffffffff80821115610bd857610bd8610b96565b604051601f8301601f19908116603f01168101908282118183101715610c0057610c00610b96565b81604052838152866020858801011115610c1957600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060408385031215610c4c57600080fd5b82359150602083013567ffffffffffffffff811115610c6a57600080fd5b610c7685828601610bac565b9150509250929050565b80356001600160a01b0381168114610c9757600080fd5b919050565b60008060008060808587031215610cb257600080fd5b610cbb85610c80565b93506020850135925060408501359150606085013567ffffffffffffffff811115610ce557600080fd5b610cf187828801610bac565b91505092959194509250565b600080600060408486031215610d1257600080fd5b83359250602084013567ffffffffffffffff80821115610d3157600080fd5b818601915086601f830112610d4557600080fd5b813581811115610d5457600080fd5b876020828501011115610d6657600080fd5b6020830194508093505050509250925092565b60008060408385031215610d8c57600080fd5b610d9583610c80565b946020939093013593505050565b60008060408385031215610db657600080fd5b610dbf83610c80565b9150610dcd60208401610c80565b90509250929050565b600060208284031215610de857600080fd5b6109fd82610c80565b600181811c90821680610e0557607f821691505b602082108103610e2557634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561056357600081815260208120601f850160051c81016020861015610e525750805b601f850160051c820191505b81811015610e7157828155600101610e5e565b505050505050565b67ffffffffffffffff831115610e9157610e91610b96565b610ea583610e9f8354610df1565b83610e2b565b6000601f841160018114610ed95760008515610ec15750838201355b600019600387901b1c1916600186901b178355610f33565b600083815260209020601f19861690835b82811015610f0a5786850135825560209485019460019092019101610eea565b5086821015610f275760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b634e487b7160e01b600052602160045260246000fd5b600060208284031215610f6257600080fd5b815180151581146109fd57600080fd5b60008251610f84818460208701610b3f565b919091019291505056fea164736f6c6343000814000a";

type PackageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PackageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Package__factory extends ContractFactory {
  constructor(...args: PackageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    market: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Package> {
    return super.deploy(
      name_,
      symbol_,
      market,
      overrides || {}
    ) as Promise<Package>;
  }
  override getDeployTransaction(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    market: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, market, overrides || {});
  }
  override attach(address: string): Package {
    return super.attach(address) as Package;
  }
  override connect(signer: Signer): Package__factory {
    return super.connect(signer) as Package__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PackageInterface {
    return new utils.Interface(_abi) as PackageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Package {
    return new Contract(address, _abi, signerOrProvider) as Package;
  }
}
