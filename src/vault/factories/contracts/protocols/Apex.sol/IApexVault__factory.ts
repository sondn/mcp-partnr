/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IApexVault,
  IApexVaultInterface,
} from "../../../../contracts/protocols/Apex.sol/IApexVault";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint104",
        name: "_amount",
        type: "uint104",
      },
      {
        internalType: "bytes32",
        name: "_zkLinkAddress",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "_subAccountId",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "_mapping",
        type: "bool",
      },
    ],
    name: "depositERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IApexVault__factory {
  static readonly abi = _abi;
  static createInterface(): IApexVaultInterface {
    return new Interface(_abi) as IApexVaultInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): IApexVault {
    return new Contract(address, _abi, runner) as unknown as IApexVault;
  }
}
